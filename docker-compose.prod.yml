services:
  db:
    image: mysql:8.0
    container_name: sales-mysql
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-root}
      MYSQL_DATABASE: ${DB_NAME:-sales_db}
      TZ: 'Asia/Tokyo'
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sales-network

  redis:
    image: redis:7-alpine
    container_name: sales-redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - sales-network
    restart: unless-stopped

  app:
    build:
      context: .
    container_name: sales-app
    env_file:
      - .env
    environment:
      DB_USER: ${DB_USER:-root}
      DB_PASSWORD: ${DB_PASSWORD:-root}
      DB_HOST: db
      DB_PORT: 3306
      DB_NAME: ${DB_NAME:-sales}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ADDRESS: ${ADDRESS:-:8050}
      VIEW_DNS_API_URL: ${VIEW_DNS_API_URL}
      API_KEY: ${API_KEY}
      PASSWORD: ${PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      SWAGGER_HOST: ${SWAGGER_HOST:-localhost:8050}
      NOTICE_WEB_APP_CHANNEL_URL: ${NOTICE_WEB_APP_CHANNEL_URL}
    ports:
      - "8050:8050"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - sales-network
    restart: unless-stopped


volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  sales-network:
    external: true