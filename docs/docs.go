// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/domains": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get domain list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ドメイン"
                ],
                "summary": "Get domains",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ドメイン名",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "閲覧可能か",
                        "name": "can_view",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "mapsで問い合わせページを開いたか",
                        "name": "is_send",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "owner_id",
                        "name": "owner_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "ステータス",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "業種",
                        "name": "industry",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "SSL対応可否",
                        "name": "is_ssl",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Domain"
                            }
                        }
                    }
                }
            }
        },
        "/domains/{id}": {
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update domain information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ドメイン"
                ],
                "summary": "Update domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "更新ドメイン情報",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UpdateDomainRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Domain"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete domain by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ドメイン"
                ],
                "summary": "Delete domain",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/fetch": {
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Fetch domain information from target",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ViewDNS"
                ],
                "summary": "Fetch domains",
                "parameters": [
                    {
                        "description": "Fetch request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.PostFetchRequest"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted"
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Domain": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "can_view": {
                    "type": "boolean"
                },
                "create_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "industry": {
                    "description": "業種",
                    "type": "string"
                },
                "is_japan": {
                    "type": "boolean"
                },
                "is_send": {
                    "type": "boolean"
                },
                "is_ssl": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "page_num": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "raw_page": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/domain.Status"
                },
                "title": {
                    "type": "string"
                },
                "update_at": {
                    "type": "string"
                }
            }
        },
        "domain.PostFetchRequest": {
            "type": "object",
            "required": [
                "target"
            ],
            "properties": {
                "target": {
                    "type": "string"
                }
            }
        },
        "domain.Status": {
            "type": "string",
            "enum": [
                "unknown",
                "initialize",
                "check_view",
                "check_japan",
                "crawl_comp_info",
                "phone",
                "done"
            ],
            "x-enum-varnames": [
                "StatusUnknown",
                "StatusInitialize",
                "StatusCheckView",
                "StatusCheckJapan",
                "StatusCrawlCompInfo",
                "StatusPhone",
                "StatusDone"
            ]
        },
        "domain.UpdateDomainRequest": {
            "type": "object",
            "required": [
                "name",
                "status"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "can_view": {
                    "type": "boolean"
                },
                "industry": {
                    "type": "string"
                },
                "is_japan": {
                    "type": "boolean"
                },
                "is_send": {
                    "type": "boolean"
                },
                "is_ssl": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "owner_id": {
                    "type": "string"
                },
                "page_num": {
                    "type": "integer"
                },
                "phone": {
                    "type": "string"
                },
                "raw_page": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Sales API",
	Description:      "ドメイン管理API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
